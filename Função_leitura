#include <Arduino.h>
#include <PL_ADXL355.h>
#include <Wire.h>
#define L=0.5
//==============================================================================

// Pin connections for using SPI or I2C interface
// ADXL355 pin    Arduino pin
//                SPI     I2C
// CS/SCL          2      SCL
// MOSI/SDA       MOSI    SDA
// MISO/ASEL      MISO    GND
// SCLK/Vssio     SCLK    GND

PL::ADXL355 adxl355;
//uint8_t spiCsPin = 2;
uint8_t i2cAddress = 0x1D;
uint8_t I2c_SDAPIN=21;
uint8_t I2c_SCLPIN=37;

// ADXL355 range: +/- 2 g
auto range = PL::ADXL355_Range::range2g;

//==============================================================================

void setup() {
  
  // Initialize ADXL355 (uncomment one of the following 2 lines to use either SPI or I2C)
  //adxl355.beginSPI(spiCsPin);
  Wire.begin(I2c_SDAPIN, I2c_SCLPIN);
  adxl355.beginI2C(i2cAddress);

  // Set ADXL355 range
  adxl355.setRange(range);
  // Enable ADXL355 measurement
  adxl355.enableMeasurement();
  
  // Initialize Serial at 115200 kbps
  Serial.begin(115200);
  // Wait for Serial ready state
  while(!Serial);
}

//==============================================================================

void loop() {
  // Read and print the accelerations
  int nummedidas=11;
  int xsoma=0, ysoma=0, zsoma=0;
  float xraw=0, yraw=0, zraw=0;
  float Ox=0, Oy=0, Oz=0;
  float somaOx=0, somaOy=0, somaOz=0;
  float Oxraw=0, Oyraw=0, Ozraw=0;
  for(int j=0; j<nummedidas; j++){
    auto accelerations = adxl355.getAccelerations();
    Ox = atan2(accelerations.x, sqrt(accelerations.y * accelerations.y + accelerations.z * accelerations.z)) * 180 / M_PI;
    Oy = atan2(accelerations.z, sqrt(accelerations.z * accelerations.x + accelerations.z * accelerations.z)) * 180 / M_PI;
    Oz = atan2(accelerations.z, sqrt(accelerations.x * accelerations.x + accelerations.y * accelerations.y)) * 180 / M_PI;
    somaOx+=Ox;
    somaOy+=Oy;
    somaOz+=Oz;
    xsoma+=accelerations.x;
    ysoma+=accelerations.y;
    zsoma+=accelerations.z;
    if(j==nummedidas){
        xraw=xsoma/(nummedidas-1);
        yraw=ysoma/(nummedidas-1);
        zraw=zsoma/(nummedidas-1);
        Oxraw=somaOx/(nummedidas-1);
        Oyraw=somaOy/(nummedidas-1);
        Ozraw=somaOz/(nummedidas-1);
        j=0;
        xsoma=0;
        ysoma=0;
        zsoma=0;
        somaOx=0;
        somaOy=0;
        somaOz=0;
        Serial.println("cálculo de nova média");
    }

  }
  
  Serial.print("Accelerations: X: ");
  Serial.print(xraw);
  Serial.print(" g, Y: ");
  Serial.print(yraw);
  Serial.print(" g, Z: ");
  Serial.print(zraw);
  Serial.println(" g");

  delay (1000);
}
